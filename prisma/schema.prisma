// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  slug String @unique @default(uuid())
  firstname String
  lastname String
  email String @unique
  verification_pin String
  email_verified Boolean @default(false)
  username String @unique
  profile_image String?
  country String?
  bio String?
  bookmarks String[]
  password String
  art_works Art[]
  followers String[]
  is_blocked Boolean @default(false)
  messages Message[]
  room_ids String[] @db.ObjectId
  rooms Room[] @relation(fields: [room_ids], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  slug String @unique @default(uuid())
  name String
  art_works Art[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Art {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  slug String @unique @default(uuid())
  author_id String
  author User @relation(fields: [author_id], references: [slug])
  category_id String
  category Category @relation(fields: [category_id], references: [slug])
  images String[]
  title String
  description String
  specifications String[]
  is_signed Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Room {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  slug String @unique @default(uuid())
  user_ids String[] @db.ObjectId
  users User[] @relation(fields: [user_ids], references: [id])
  messages Message[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  slug String @unique @default(uuid())
  message String
  sender_id String
  sender User @relation(fields: [sender_id], references: [slug])
  room_id String
  room Room @relation(fields: [room_id], references: [slug])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}